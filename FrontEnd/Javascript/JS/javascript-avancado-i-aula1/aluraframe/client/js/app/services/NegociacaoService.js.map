{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","console","log","negociacoes","map","Date","objeto","data","quantidade","valor","catch","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":";;;;;;;;;;;;;;;AAAQA,iB,gBAAAA,W;;AACAC,uB,sBAAAA,iB;;AACAC,mB,qBAAAA,a;;AACAC,gB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;mCAEKC,iB;AACX,qCAAc;AAAA;;AACZ,eAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACD;;;;qDAE0B;AACzB,mBAAO,KAAKK,KAAL,CACJC,GADI,CACA,oBADA,EAEJC,IAFI,CAEC,uBAAe;AACnBC,sBAAQC,GAAR,CAAYC,WAAZ;AACA,qBAAOA,YAAYC,GAAZ,CACL;AAAA,uBACE,IAAIR,UAAJ,CACE,IAAIS,IAAJ,CAASC,OAAOC,IAAhB,CADF,EAEED,OAAOE,UAFT,EAGEF,OAAOG,KAHT,CADF;AAAA,eADK,CAAP;AAQD,aAZI,EAaJC,KAbI,CAaE,gBAAQ;AACbT,sBAAQC,GAAR,CAAYS,IAAZ;AACA,oBAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACD,aAhBI,CAAP;AAiBD;;;6DAEkC;AACjC,mBAAO,KAAKd,KAAL,CACJC,GADI,CACA,sBADA,EAEJC,IAFI,CAEC,uBAAe;AACnBC,sBAAQC,GAAR,CAAYC,WAAZ;AACA,qBAAOA,YAAYC,GAAZ,CACL;AAAA,uBACE,IAAIR,UAAJ,CACE,IAAIS,IAAJ,CAASC,OAAOC,IAAhB,CADF,EAEED,OAAOE,UAFT,EAGEF,OAAOG,KAHT,CADF;AAAA,eADK,CAAP;AAQD,aAZI,EAaJC,KAbI,CAaE,gBAAQ;AACbT,sBAAQC,GAAR,CAAYS,IAAZ;AACA,oBAAM,IAAIC,KAAJ,CACJ,0DADI,CAAN;AAGD,aAlBI,CAAP;AAmBD;;;8DAEmC;AAClC,mBAAO,KAAKd,KAAL,CACJC,GADI,CACA,uBADA,EAEJC,IAFI,CAEC,uBAAe;AACnBC,sBAAQC,GAAR,CAAYC,WAAZ;AACA,qBAAOA,YAAYC,GAAZ,CACL;AAAA,uBACE,IAAIR,UAAJ,CACE,IAAIS,IAAJ,CAASC,OAAOC,IAAhB,CADF,EAEED,OAAOE,UAFT,EAGEF,OAAOG,KAHT,CADF;AAAA,eADK,CAAP;AAQD,aAZI,EAaJC,KAbI,CAaE,gBAAQ;AACbT,sBAAQC,GAAR,CAAYS,IAAZ;AACA,oBAAM,IAAIC,KAAJ,CACJ,2DADI,CAAN;AAGD,aAlBI,CAAP;AAmBD;;;6CAEkB;AACjB,mBAAOC,QAAQC,GAAR,CAAY,CACjB,KAAKC,wBAAL,EADiB,EAEjB,KAAKC,gCAAL,EAFiB,EAGjB,KAAKC,iCAAL,EAHiB,CAAZ,EAKJjB,IALI,CAKC,oBAAY;AAChB,kBAAIG,cAAce,SACfC,MADe,CACR,UAACC,KAAD,EAAQC,OAAR;AAAA,uBAAoBD,MAAME,MAAN,CAAaD,OAAb,CAApB;AAAA,eADQ,EACmC,EADnC,EAEfjB,GAFe,CAGd;AAAA,uBACE,IAAIR,UAAJ,CAAe,IAAIS,IAAJ,CAASkB,KAAKhB,IAAd,CAAf,EAAoCgB,KAAKf,UAAzC,EAAqDe,KAAKd,KAA1D,CADF;AAAA,eAHc,CAAlB;;AAOA,qBAAON,WAAP;AACD,aAdI,EAeJO,KAfI,CAeE,gBAAQ;AACb,oBAAM,IAAIE,KAAJ,CAAUD,IAAV,CAAN;AACD,aAjBI,CAAP;AAkBD;;;mCAEQa,U,EAAY;AACnB,mBAAO9B,kBAAkB+B,aAAlB,GACJzB,IADI,CACC;AAAA,qBAAc,IAAIL,aAAJ,CAAkB+B,UAAlB,CAAd;AAAA,aADD,EAEJ1B,IAFI,CAEC;AAAA,qBAAO2B,IAAIC,QAAJ,CAAaJ,UAAb,CAAP;AAAA,aAFD,EAGJxB,IAHI,CAGC;AAAA,qBAAM,mCAAN;AAAA,aAHD,EAIJU,KAJI,CAIE,gBAAQ;AACbT,sBAAQC,GAAR,CAAYS,IAAZ;AACA,oBAAM,IAAIC,KAAJ,CAAU,yCAAV,CAAN;AACD,aAPI,CAAP;AAQD;;;kCAEO;AACN,mBAAOlB,kBAAkB+B,aAAlB,GACJzB,IADI,CACC;AAAA,qBAAc,IAAIL,aAAJ,CAAkB+B,UAAlB,CAAd;AAAA,aADD,EAEJ1B,IAFI,CAEC;AAAA,qBAAO2B,IAAIE,UAAJ,EAAP;AAAA,aAFD,EAGJnB,KAHI,CAGE,gBAAQ;AACbT,sBAAQC,GAAR,CAAYS,IAAZ;AACA,oBAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD,aANI,CAAP;AAOD;;;kCAEO;AACN,mBAAOlB,kBAAkB+B,aAAlB,GACJzB,IADI,CACC;AAAA,qBAAc,IAAIL,aAAJ,CAAkB+B,UAAlB,CAAd;AAAA,aADD,EAEJ1B,IAFI,CAEC;AAAA,qBAAO2B,IAAIG,UAAJ,EAAP;AAAA,aAFD,EAGJ9B,IAHI,CAGC;AAAA,qBAAM,kCAAN;AAAA,aAHD,EAIJU,KAJI,CAIE,gBAAQ;AACbT,sBAAQC,GAAR,CAAYS,IAAZ;AACA,oBAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACD,aAPI,CAAP;AAQD;;;kCAEOmB,U,EAAY;AAClB,mBAAO,KAAKC,gBAAL,GACJhC,IADI,CACC;AAAA,qBACJG,YAAY8B,MAAZ,CAAmB;AAAA,uBACf,CAACF,WAAWG,IAAX,CACC;AAAA,yBAAuBC,KAAKC,SAAL,CAAeZ,UAAf,KAA8BW,KAAKC,SAAL,CAAeC,mBAAf,CAArD;AAAA,iBADD,CADc;AAAA,eAAnB,CADI;AAAA,aADD,EAKJ3B,KALI,CAKE,gBAAQ;AACbT,sBAAQC,GAAR,CAAYS,IAAZ;AACA,oBAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACD,aARI,CAAP;AASC","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n  constructor() {\n    this._http = new HttpService();\n  }\n\n  obterNegociacoesDaSemana() {\n    return this._http\n      .get(\"negociacoes/semana\")\n      .then(negociacoes => {\n        console.log(negociacoes);\n        return negociacoes.map(\n          objeto =>\n            new Negociacao(\n              new Date(objeto.data),\n              objeto.quantidade,\n              objeto.valor\n            )\n        );\n      })\n      .catch(erro => {\n        console.log(erro);\n        throw new Error(\"Não foi possível obter as negociações da semana\");\n      });\n  }\n\n  obterNegociacoesDaSemanaAnterior() {\n    return this._http\n      .get(\"negociacoes/anterior\")\n      .then(negociacoes => {\n        console.log(negociacoes);\n        return negociacoes.map(\n          objeto =>\n            new Negociacao(\n              new Date(objeto.data),\n              objeto.quantidade,\n              objeto.valor\n            )\n        );\n      })\n      .catch(erro => {\n        console.log(erro);\n        throw new Error(\n          \"Não foi possível obter as negociações da semana anterior\"\n        );\n      });\n  }\n\n  obterNegociacoesDaSemanaRetrasada() {\n    return this._http\n      .get(\"negociacoes/retrasada\")\n      .then(negociacoes => {\n        console.log(negociacoes);\n        return negociacoes.map(\n          objeto =>\n            new Negociacao(\n              new Date(objeto.data),\n              objeto.quantidade,\n              objeto.valor\n            )\n        );\n      })\n      .catch(erro => {\n        console.log(erro);\n        throw new Error(\n          \"Não foi possível obter as negociações da semana retrasada\"\n        );\n      });\n  }\n\n  obterNegociacoes() {\n    return Promise.all([\n      this.obterNegociacoesDaSemana(),\n      this.obterNegociacoesDaSemanaAnterior(),\n      this.obterNegociacoesDaSemanaRetrasada()\n    ])\n      .then(periodos => {\n        let negociacoes = periodos\n          .reduce((dados, periodo) => dados.concat(periodo), [])\n          .map(\n            dado =>\n              new Negociacao(new Date(dado.data), dado.quantidade, dado.valor)\n          );\n\n        return negociacoes;\n      })\n      .catch(erro => {\n        throw new Error(erro);\n      });\n  }\n\n  cadastra(negociacao) {\n    return ConnectionFactory.getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.adiciona(negociacao))\n      .then(() => \"Negociação adicionada com sucesso\")\n      .catch(erro => {\n        console.log(erro);\n        throw new Error(\"Não foi possível adicionar a negociação\");\n      });\n  }\n\n  lista() {\n    return ConnectionFactory.getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.listaTodos())\n      .catch(erro => {\n        console.log(erro);\n        throw new Error(\"Não foi possível obter as negociações\");\n      });\n  }\n\n  apaga() {\n    return ConnectionFactory.getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.apagaTodos())\n      .then(() => \"Negociações apagadas com sucesso\")\n      .catch(erro => {\n        console.log(erro);\n        throw new Error(\"Não foi possível apagar as negociações\");\n      });\n  }\n\n  importa(listaAtual) {\n    return this.obterNegociacoes()\n      .then(negociacoes =>\n        negociacoes.filter(negociacao =>\n            !listaAtual.some(\n              negociacaoExistente => JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente))))\n      .catch(erro => {\n        console.log(erro)\n        throw new Error('Não foi possível buscar negociações para importar');\n      });     \n    }\n}\n"]}