{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAAaA,W;;;;;;;wCAEGC,G,EAAK;AACjB,gBAAIA,IAAIC,EAAR,EAAY;AACV,qBAAOD,GAAP;AACD,aAFD,MAEO;AACL,oBAAM,IAAIE,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACD;AACF;;;8BAEGC,G,EAAK;AAAA;;AACP,mBAAOC,MAAMD,GAAN,EACJE,IADI,CACC;AAAA,qBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADD,EAEJM,IAFI,CAEC;AAAA,qBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFD,CAAP;AAGD;;;+BAEIJ,G,EAAKK,I,EAAM;AAAA;;AACd,mBAAOJ,MAAMD,GAAN,EAAW;AAChBM,uBAAS,EAAC,gBAAgB,kBAAjB,EADO;AAEhBC,sBAAQ,MAFQ;AAGhBC,oBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHU,aAAX,EAKNH,IALM,CAKD;AAAA,qBAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aALC,CAAP;AAMD","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n  _handleErrors(res) {\n    if (res.ok) {\n      return res;\n    } else {\n      throw new Error(res.statusText);\n    }\n  }\n\n  get(url) {\n    return fetch(url)\n      .then(res => this._handleErrors(res))\n      .then(res => res.json());\n  }\n\n  post(url, dado) {\n    return fetch(url, {\n      headers: {'Content-type': 'application/json'},\n      method: 'POST',\n      body: JSON.stringify(dado)\n    })\n    .then(res => this._handleErrors(res));\n  }\n\n  /* OLD \n  get(url) {\n    return new Promise((resolve, reject) => {\n      let xhr = new XMLHttpRequest();\n\n      xhr.open(\"GET\", url);\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState == 4) {\n          if (xhr.status == 200) {\n            resolve(JSON.parse(xhr.responseText));\n          } else {\n            reject(xhr.responseText);\n          }\n        }\n      };\n\n      xhr.send();\n    });\n  }\n\n  post(url, dado) {\n    return new Promise((resolve, reject) => {\n      let xhr = new XMLHttpRequest();\n      xhr.open(\"POST\", url, true);\n      xhr.setRequestHeader(\"Content-type\", \"application/json\");\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState == 4) {\n          if (xhr.status == 200) {\n            resolve(JSON.parse(xhr.responseText));\n          } else {\n            reject(xhr.responseText);\n          }\n        }\n      };\n      xhr.send(JSON.stringify(dado)); // usando JSON.stringifly para converter objeto em uma string no formato JSON.\n    });\n  }\n  */\n}\n"]}